openapi: 3.0.0
info:
  title: 동행앱 API
  description: 복지 서비스, 소비 내역, 사용자 인증 등 동행앱의 API 문서
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: 개발 서버

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    WelfareService:
      type: object
      properties:
        _id:
          type: string
          description: 복지 서비스 ID
        서비스아이디:
          type: string
          description: 복지 서비스 아이디
        서비스명:
          type: string
          description: 복지 서비스 이름
        서비스요약:
          type: string
          description: 복지 서비스 요약 설명
        소관부처명:
          type: string
          description: 담당 정부 부처
        소관조직명:
          type: string
          description: 담당 조직
        대표문의:
          type: string
          description: 문의 연락처
        사이트:
          type: string
          description: 관련 웹사이트
        서비스URL:
          type: string
          description: 서비스 URL
        기준연도:
          type: integer
          description: 기준 연도
        최종수정일:
          type: string
          description: 마지막 수정일
        isActive:
          type: boolean
          description: 활성화 상태
    SpendingData:
      type: object
      properties:
        _id:
          type: string
          description: 소비 데이터 ID
        sex:
          type: string
          description: 성별 (F/M)
        age:
          type: integer
          description: 나이
        total_spent:
          type: number
          description: 총 지출액
        card_tpbuz_nm_1:
          type: string
          description: 카드 사용 업종
        ta_ymd:
          type: string
          description: 거래 일자
        description:
          type: string
          description: 설명
    User:
      type: object
      properties:
        _id:
          type: string
          description: 사용자 ID
        kakaoId:
          type: string
          description: 카카오 ID
        email:
          type: string
          description: 이메일
        name:
          type: string
          description: 이름
        profileImage:
          type: string
          description: 프로필 이미지 URL
        age:
          type: integer
          description: 나이
        gender:
          type: string
          description: 성별
        preferences:
          type: object
          description: 선호 설정
    ChatMessage:
      type: object
      properties:
        _id:
          type: string
          description: 메시지 ID
        sessionId:
          type: string
          description: 세션 ID
        userId:
          type: string
          description: 사용자 ID
        content:
          type: string
          description: 메시지 내용
        role:
          type: string
          description: 메시지 역할(user/assistant)
        createdAt:
          type: string
          format: date-time
          description: 생성일

tags:
  - name: 복지 서비스
    description: 복지 서비스 관련 API
  - name: 소비 내역
    description: 사용자 소비 내역 및 통계 관련 API
  - name: 인증
    description: 사용자 인증(로그인, 로그아웃) 관련 API
  - name: 사용자
    description: 사용자 정보 및 프로필 관련 API
  - name: 챗봇
    description: AI 챗봇 관련 API

paths:
  /api/welfare:
    get:
      tags:
        - 복지 서비스
      summary: 복지 서비스 목록 조회
      description: 페이지네이션을 지원하는 복지 서비스 목록 조회 API
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: 페이지 번호
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
          description: 페이지당 결과 수
      responses:
        '200':
          description: 복지 서비스 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/WelfareService'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer
  
  /api/welfare/search:
    get:
      tags:
        - 복지 서비스
      summary: 복지 서비스 검색
      description: 키워드로 복지 서비스 검색 API
      parameters:
        - name: keyword
          in: query
          required: true
          schema:
            type: string
          description: 검색 키워드
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: 페이지 번호
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
          description: 페이지당 결과 수
      responses:
        '200':
          description: 복지 서비스 검색 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/WelfareService'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer
  
  /api/welfare/{id}:
    get:
      tags:
        - 복지 서비스
      summary: 복지 서비스 상세 조회
      description: ID로 특정 복지 서비스 상세 정보 조회 API
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 복지 서비스 ID
      responses:
        '200':
          description: 복지 서비스 상세 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/WelfareService'
        '404':
          description: 복지 서비스를 찾을 수 없음
  
  /api/welfare/peer-statistics:
    get:
      tags:
        - 복지 서비스
      summary: 동년배 통계 데이터 조회
      description: 연령과 성별로 필터링된 동년배 통계 조회 API
      parameters:
        - name: age
          in: query
          schema:
            type: integer
          description: 연령 (예: 50)
        - name: gender
          in: query
          schema:
            type: string
            enum: [male, female]
          description: 성별
      responses:
        '200':
          description: 동년배 통계 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
  
  /api/welfare/sync:
    post:
      tags:
        - 복지 서비스
      summary: 복지 서비스 데이터 동기화
      description: 외부 API에서 복지 서비스 데이터를 가져와 동기화하는 API
      responses:
        '200':
          description: 복지 서비스 데이터 동기화 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  stats:
                    type: object
                    properties:
                      added:
                        type: integer
                      updated:
                        type: integer
                      errors:
                        type: integer
  
  /api/spending:
    get:
      tags:
        - 소비 내역
      summary: 소비내역 목록 조회
      description: 소비내역 데이터 목록 조회 API
      parameters:
        - name: sortField
          in: query
          schema:
            type: string
          description: 정렬 필드
        - name: sortDirection
          in: query
          schema:
            type: string
            enum: [asc, desc]
          description: 정렬 방향
      responses:
        '200':
          description: 소비내역 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SpendingData'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer
  
  /api/spending/stats/gender:
    get:
      tags:
        - 소비 내역
      summary: 소비 성별 통계 조회
      description: 성별에 따른 소비 통계 데이터 조회 API
      responses:
        '200':
          description: 성별 통계 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
  
  /api/spending/stats/age:
    get:
      tags:
        - 소비 내역
      summary: 연령별 통계 조회
      description: 연령별 소비 통계 데이터 조회 API
      responses:
        '200':
          description: 연령별 통계 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
  
  /api/spending/stats/category:
    get:
      tags:
        - 소비 내역
      summary: 업종별 통계 조회
      description: 업종별 소비 통계 데이터 조회 API
      responses:
        '200':
          description: 업종별 통계 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
  
  /api/spending/dashboard:
    get:
      tags:
        - 소비 내역
      summary: 대시보드 통계 조회
      description: 대시보드용 종합 통계 데이터 조회 API
      responses:
        '200':
          description: 대시보드 통계 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
  
  /api/spending/comparison:
    get:
      tags:
        - 소비 내역
      summary: 소비 동년배 비교 조회
      description: 사용자와 동년배 간의 소비 패턴 비교 데이터 조회 API
      parameters:
        - name: year
          in: query
          required: true
          schema:
            type: integer
          description: 연도
        - name: month
          in: query
          required: true
          schema:
            type: integer
          description: 월
        - name: age
          in: query
          schema:
            type: integer
          description: 연령대 (예: 5는 50대)
      responses:
        '200':
          description: 동년배 비교 데이터 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    
  /api/auth/register:
    post:
      tags:
        - 인증
      summary: 회원가입
      description: 이메일, 비밀번호로 새 사용자 등록 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: yourpassword123
                name:
                  type: string
                  example: 홍길동
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: 잘못된 요청 (이메일 중복 또는 필수 필드 누락)
        '500':
          description: 서버 오류
  
  /api/auth/login:
    post:
      tags:
        - 인증
      summary: 일반 로그인
      description: 이메일과 비밀번호를 사용한 로그인 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: yourpassword123
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: 인증 실패 (이메일 또는 비밀번호 불일치)
        '400':
          description: 잘못된 요청 (필수 필드 누락)
        '500':
          description: 서버 오류
  
  /api/auth/dev-login:
    post:
      tags:
        - 인증
      summary: 개발용 로그인
      description: 개발 환경에서만 작동하는 간편 로그인 API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: example@example.com
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
  
  /api/auth/check:
    get:
      tags:
        - 인증
      summary: 로그인 상태 확인
      description: 현재 사용자의 인증 상태 확인 API
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 로그인 상태 확인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: 인증 실패
  
  /api/auth/logout:
    post:
      tags:
        - 인증
      summary: 로그아웃
      description: 현재 인증된 사용자 로그아웃 API
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 로그아웃 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '401':
          description: 인증 실패
  
  /api/users/profile:
    get:
      tags:
        - 사용자
      summary: 사용자 프로필 조회
      description: 현재 인증된 사용자의 프로필 정보 조회 API
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 프로필 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          description: 인증 실패
        '404':
          description: 사용자를 찾을 수 없음
    
    put:
      tags:
        - 사용자
      summary: 사용자 프로필 업데이트
      description: 현재 인증된 사용자의 프로필 정보 수정 API
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                age:
                  type: integer
                gender:
                  type: string
                  enum: [male, female, other, unspecified]
                preferences:
                  type: object
                  properties:
                    category:
                      type: string
      responses:
        '200':
          description: 프로필 업데이트 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
        '401':
          description: 인증 실패
        '404':
          description: 사용자를 찾을 수 없음
  
  /api/chatbot/message:
    post:
      tags:
        - 챗봇
      summary: 챗봇 메시지 전송
      description: 챗봇에 메시지를 보내고 응답 받는 API
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 복지 서비스 추천해줘
                sessionId:
                  type: string
                  description: 세션 ID (선택 사항)
      responses:
        '200':
          description: 챗봇 응답 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      response:
                        type: string
                      sessionId:
                        type: string
        '401':
          description: 인증 실패
  
  /api/chatbot/history:
    get:
      tags:
        - 챗봇
      summary: 챗봇 대화 내역 조회
      description: 특정 세션의 챗봇 대화 내역 조회 API
      security:
        - bearerAuth: []
      parameters:
        - name: sessionId
          in: query
          required: true
          schema:
            type: string
          description: 세션 ID
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
          description: 조회할 메시지 수 제한
      responses:
        '200':
          description: 대화 내역 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChatMessage'
        '401':
          description: 인증 실패